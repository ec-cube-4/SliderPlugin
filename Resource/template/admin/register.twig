
{% extends '@admin/default_frame.twig' %}

{% set menus = ['content', 'plugin_slider'] %}

{% block title %}{{ 'plugin_slider.admin.slider_management'|trans }}{% endblock %}
{% block sub_title %}{{ 'plugin_slider.admin.slider_regist'|trans }}{% endblock %}

{% form_theme form '@admin/Form/bootstrap_4_horizontal_layout.html.twig' %}

{% block javascript %}
    <script>
        $(document).on('drop dragover', function(e) {
            e.preventDefault();
        });
        $(function() {
           // ファイルアップロード
            // see https://pqina.nl/filepond/
            var inputFileElement = document.querySelector('input[type=file]');
            FilePond.setOptions({
                server: {
                    process: {
                        url: '{{ path('plugin_slider_image_process') }}',
                        headers: {
                            'ECCUBE-CSRF-TOKEN': $('meta[name="eccube-csrf-token"]').attr('content'),
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    },
                    load: {
                        url: '{{ path('plugin_slider_image_load') }}?source=',
                        headers: {
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    },
                    revert: {
                        url: '{{ path('plugin_slider_image_revert') }}',
                        headers: {
                            'ECCUBE-CSRF-TOKEN': $('meta[name="eccube-csrf-token"]').attr('content'),
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    }
                }
            });
            var pond = FilePond.create(inputFileElement, {
                allowFileTypeValidation: true,
                acceptedFileTypes: [
                    'image/gif',
                    'image/png',
                    'image/jpeg'
                ],
                allowFileSizeValidation: true,
                maxFileSize: 10000000,
                maxFiles: 10,
                allowBrowse: true,
                allowDrop: true,
                allowReorder: true,
                labelIdle: '<i class="fa fa-cloud-upload fa-3x text-ec-lightGray mx-3 align-middle" aria-hidden="true" style="font-size: 40px"></i>{{ 'admin.common.drag_and_drop_image_description'|trans }}<span class="filepond--label-action">{{ 'admin.common.file_select'|trans }}</span>',
                styleItemPanelAspectRatio: 0.5625,
                // 保存されている画像のロード
                files: [
                    {% for image in form.images %}
                    {
                        source: '{{ image.vars.value }}',
                        options: {
                            type: 'local'
                        }
                    },
                    {% endfor %}
                    // 追加してすぐの画像のロード. バリデーションエラーの場合など.
                    {% for add_image in form.add_images %}
                    {
                        source: '{{ add_image.vars.value }}',
                        options: {
                            type: 'local'
                        }
                    },
                    {% endfor %}
                ]
            });
            // 画像が追加されたら add_images にファイル名を追加する
            var proto_add = '{{ form_widget(form.add_images.vars.prototype) }}';
            pond.on('processfile', function(error, file) {
                if (error) {
                    console.log(error);
                } else {
                    $('#upload-zone').append(
                        $(proto_add.replace(/__name__/g, file.id))
                            .val(file.serverId)
                            .addClass('add_images')
                    );
                }
            });
            // 画像が削除されたら delete_images にファイル名を追加する
            var proto_del = '{{ form_widget(form.delete_images.vars.prototype) }}';
            pond.on('removefile', function(error, file) {
                if (error) {
                    console.log(error);
                } else {
                    // file.serverId にはアップロードしたファイル名が格納される.
                    if (file.serverId) {
                        $('#upload-zone').append(
                            $(proto_del.replace(/__name__/g, file.id))
                                .val(file.serverId)
                                .addClass('del_images')
                        );
                    }
                    // 追加してすぐ削除した画像があれば削除する
                    $('#upload-zone').find('#plugin_slider_add_images_' + file.id).remove(); // 追加してすぐ削除した画像
                    $('#upload-zone').find('.add_images[value="' + file.filename + '"]').remove(); // 追加後, バリデーションエラーが発生した後に削除した画像
                }
            });
            // バリデーションエラーが出た場合に画像を保持するための hidden を追加しておく
            var proto_image = '{{ form_widget(form.images.vars.prototype) }}';
            {% for image in form.images %}
                $('#upload-zone').append(
                    $(proto_image.replace(/__name__/g, '{{ loop.index0 }}'))
                        .val('{{ image.vars.value }}')
                        .addClass('images')
                );
            {% endfor %}
            {% for add_image in form.add_images %}
                $('#upload-zone').append(
                    $('{{ form_widget(add_image) }}')
                        .val('{{ add_image.vars.value }}')
                        .addClass('add_images')
                );
            {% endfor %}
            {% for delete_image in form.delete_images %}
                $('#upload-zone').append(
                    $('{{ form_widget(delete_image) }}').addClass('del_images')
                );
            {% endfor %}

            var confirmFormChange = function(form, target, modal) {
                var returnLink = form.find('input[type="hidden"][name*="return_link"]'),
                    saveBtn = modal.find('a[data-action="save"]'),
                    cancelBtn = modal.find('a[data-action="cancel"]');
                modal.on('hidden.bs.modal', function() {
                    returnLink.val('');
                });
                saveBtn.on('click', function() {
                    returnLink.val($(this).data('return-link'));
                    $(this).addClass('disabled');
                    form.submit();
                });
                target.on('click', function() {
                    modal.find('.modal-body .screen-name').text($(this).attr('title'));
                    modal.modal('show');
                    saveBtn.data('return-link', $(this).attr('href'));
                    cancelBtn.attr('href', $(this).attr('href'));
                    return false;
                });
            };
            confirmFormChange($('#form1'), $('a[data-action="confirm"]'), $('#confirmFormChangeModal'))
        });

    </script>
{% endblock javascript %}


{% block main %}
   <!-- 移動確認モーダル-->
    <div class="modal fade" id="confirmFormChangeModal" tabindex="-1" role="dialog"
         aria-labelledby="confirmFormChangeModal" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">{{ 'admin.common.move_to_confirm_title'|trans }}</h5>
                    <button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close">

                    </button>
                </div>
                <div class="modal-body">
                    <p class="screen-name"></p>
                </div>
                <div class="modal-footer">
                    <a class="btn btn-ec-conversion" data-action="save" href="javascript:void(0)">
                        {{ 'admin.common.move_to_confirm_save_and_move'|trans }}
                    </a>
                    <a class="btn btn-ec-sub" data-action="cancel" href="javascript:void(0)">
                        {{ 'admin.common.move_to_confirm_move_only'|trans }}
                    </a>
                </div>
            </div>
        </div>
    </div>

    <form role="form" name="form1" id="form1" method="post" action="" novalidate enctype="multipart/form-data">
        {{ form_widget(form._token) }}
        {{ form_widget(form.return_link) }}

        <div class="c-contentsArea__cols">
            <div class="c-contentsArea__primaryCol">
                <div class="c-primaryCol">
                    <div class="card rounded border-0 mb-4">
                        <div class="card-header">
                            <div class="row">
                                <div class="col-8">
                                    <div class="d-inline-block">
                                    <span class="card-title">
                                        {{ 'plugin_slider.admin.slider_image'|trans }}
                                    </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="collapse show ec-cardCollapse">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-3">
                                        <div class="d-inline-block" data-tooltip="true" data-placement="top" title="{{ 'tooltip.product.image'|trans }}">
                                            <span>{{ 'plugin_slider.admin.slider_image'|trans }}</span>
                                            <i class="fa fa-question-circle fa-lg ml-1"></i>
                                            <br>{{ 'admin.product.image_size'|trans }}
                                        </div>
                                    </div>
                                    <div class="col mb-2">
                                        <p id="message"></p>
                                        <div id="upload-zone" class="rounded">
                                            {{ form_widget(form.slider_image, { attr : { style : 'display:none;' } }) }}
                                            {{ form_errors(form.slider_image) }}
                                        </div><!-- /#upload-zone -->
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        {% set backPath = (Parent is not empty) ? url('plugin_slider_category',  { parent_id : Parent.id }) : url('plugin_slider_list')  %}
        <div class="c-conversionArea">
            <div class="c-conversionArea__container">
                <div class="row justify-content-between align-items-center">
                    <div class="col-6">
                        <div class="c-conversionArea__leftBlockItem">
                            <a class="c-baseLink" href="{{ backPath }}"
                               data-action="confirm" title="{{ 'admin.common.move_to_confirm_message'|trans({'%name%' : 'plugin_slider.admin.slider_management'|trans }) }}">
                                <i class="fa fa-backward" aria-hidden="true"></i><span>{{ 'plugin_slider.admin.slider_management'|trans }}</span>
                            </a>
                        </div>
                    </div>
                    <div class="col-6">
                        <div id="ex-conversion-action" class="row align-items-center justify-content-end">
                            <div class="col-auto">
                                <button class="btn btn-ec-conversion px-5" type="submit">{{ 'admin.common.registration'|trans }}</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
{% endblock %}
